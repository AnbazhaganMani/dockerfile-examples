########## Linux on z Systems Dockerfile for Jenkins server version 1.625 #########
#
# This Dockerfile builds a basic installation of Jenkins server.
#
# Jenkins is an open source continuous integration tool written in Java. The project was forked from Hudson after a dispute with Oracle.
# Jenkins provides continuous integration services for software development. 
# It is a server-based system running in a servlet container such as Apache Tomcat.
#
# To build this image, from the directory containing this Dockerfile
# (assuming that the file is named Dockerfile):
# docker build -t <image_name> .
#
# To Start Jenkins server create a container from the created image and
# expose port 8080.
# docker run --name <container_name> -p <port_number>:8080 -d <image_name>
#
##################################################################################

# Disclaimer: 
# 1. This base image was built using http://containerz.blogspot.co.uk/2015/03/creating-base-images.html
#    and was configured to access suitable repositories for installing dependent software packages.

# Base Image
FROM sles12

# The author
MAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)

# Install dependencies
RUN zypper install -y wget \
        tar \
        java-1_7_0-openjdk-devel \
        git-core \
        dejavu-fonts

# Set environment variable for JAVA
ENV JAVA_HOME /usr/lib64/jvm/java-1.7.0
ENV PATH $PATH:$JAVA_HOME/bin

# Install ant
# Download Apache ant source from archive.apache.org
RUN wget http://archive.apache.org/dist/ant/binaries/apache-ant-1.9.3-bin.tar.gz && tar zxf apache-ant-1.9.3-bin.tar.gz

# Set environment variable for ANT
ENV ANT_HOME /apache-ant-1.9.3
ENV PATH $PATH:$ANT_HOME/bin

# Install Maven
# Clone maven from github and checkout branch 3.3.3
RUN git clone https://git-wip-us.apache.org/repos/asf/maven.git/ --branch maven-3.3.3

# Download plexus-container-default-1.5.5.jar required for building maven
RUN mkdir -p /root/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.5 && \
wget https://repo1.maven.org/maven2/org/codehaus/plexus/plexus-container-default/1.5.5/plexus-container-default-1.5.5.jar && \
mv plexus-container-default-1.5.5.jar /root/.m2/repository/org/codehaus/plexus/plexus-container-default/1.5.5

# Increase buid timeout of Maven
RUN cd maven &&  sed -i 's/timeout="600000"/timeout="2000000"/' build.xml

# Run ANT to download dependencies, build Maven, and install
RUN cd maven &&  ant -Dmaven.home="/maven_build" -Dmaven.test.skip=true

# Set path for Maven
ENV M2_HOME /maven_build
ENV PATH $PATH:$M2_HOME/bin

# Install tomcat to deploy Jenkins application
# Download tomcat source from github and checkout version 8.0.23
RUN git clone  https://github.com/apache/tomcat80.git && cd tomcat80 && git checkout TOMCAT_8_0_23

# Set environment variable for Apache tomcat
ENV CATALINA_HOME /tomcat80/output/build
ENV PATH $PATH:$CATALINA_HOME/bin

# Build Apache Tomcat
RUN cd tomcat80 && git checkout TOMCAT_8_0_23 && cp build.properties.default build.properties && ant

# Exclude performance tests. E.g. on systems with slow/inconsistent timing
RUN echo "test.excludePerformance=true" >> tomcat80/build.properties

# Increase Server WAIT TIME for systems with slow/inconsistent timing
RUN sed -i 's/60000/6000000/' tomcat80/test/org/apache/tomcat/websocket/TesterFirehoseServer.java

# Port for Apache tomcat
EXPOSE 8080

# Add manager role to tomcat
RUN sed  -i '$ i \
<role rolename="manager-gui"/> \
<user username="tomcat" password="tomcat" roles="manager-gui"/> ' $CATALINA_HOME/conf/tomcat-users.xml

# Clone stable Jenkins source code, Build and install Jenkins
RUN git clone -b stable-1.625  https://github.com/jenkinsci/jenkins.git && \
cd jenkins && \
mvn clean install -pl war -am -DskipTests

# Copy jenkins.war file into webapps folder of tomcat
RUN cp /jenkins/war/target/jenkins.war $CATALINA_HOME/webapps/jenkins.war

# Copy jenkins.war file into Jenkins directory
RUN mkdir /Jenkins && cp /jenkins/war/target/jenkins.war /Jenkins

# Create a Mount point Jenkins to store jenkins.war file
VOLUME /Jenkins

# Set work directory to catalina home
WORKDIR $CATALINA_HOME/bin

# Start tomcat server
CMD catalina.sh start && tail -f $CATALINA_HOME/logs/catalina.out

