# Base image (Erlang on RHEL7)
FROM erlang_rhel7:latest

# The author
MAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)

# Install dependencies
RUN yum install --nogpgcheck -y \
        libicu-devel \
        libcurl \
        libcurl-devel \
        git \
        wget \
        zip \
        bzip2 \
        tar \
        nspr \
        nspr-devel \
        autoconf213 \
        fontconfig \
        fontconfig-devel \
        pkgconfig \
        make \
        gtk2-devel \
        libXt-devel \
        libIDL \
        libIDL-devel \
        freetype \
        freetype-devel \
        gstreamer1 \
        gstreamer1-devel \
        dbus \
        dbus-devel \
        dbus-glib \
        dbus-glib-devel \
        libnotify \
        libnotify-devel \
        python \
        perl \
        java-1.7.1-ibm \
        java-1.7.1-ibm-devel \
        gcc-c++ \
        ncurses-devel \
        js \
        js-devel \
        openssl-devel \
        unixODBC-devel \
        libssh2-devel \
        which

# Re-install ca-certificates for openssl
RUN yum  reinstall -y  openssl ca-certificates

# Set work directory to /
WORKDIR /

# Clone the Node.js code from github
RUN git clone https://github.com/andrewlow/node.git

# Build and install Node.js
RUN cd node/ && ./configure && make && make install

# Clone rebar from githum
RUN git clone git://github.com/rebar/rebar.git

# Set work directory to /rebar
WORKDIR /rebar

# Build rebar
RUN cd rebar && ./bootstrap

# Copy rebar binary into /usr/local/bin
RUN cp rebar /usr/local/bin/

# Set work directory to /
WORKDIR /

# Clone CouchDB code from github
RUN git clone https://git-wip-us.apache.org/repos/asf/couchdb.git

# Set work directory to /couchdb
WORKDIR /couchdb

# Checkout developer-preview-2.0 branch of CouchDB from github
RUN git checkout developer-preview-2.0

# Build CouchDB
RUN ./configure -c && make

# CouchDB ports
EXPOSE 15984 25984 35984

# Run the CouchDB
CMD ["python", "/couchdb/dev/run"]


