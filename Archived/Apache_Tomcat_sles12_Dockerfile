########## Linux on z Systems Dockerfile for Apache Tomcat version 8.0.30 #########
#
# This Dockerfile builds a basic installation of Apache Tomcat.
#
# Apache Tomcat, is an open-source web server developed by the Apache Software Foundation (ASF).
# Apache Tomcat implements several Java EE specifications including Java Servlet, JavaServer Pages (JSP), Java EL,
# and WebSocket, and provides a "pure Java" HTTP web server environment for Java code to run in.
#
# To build this image, from the directory containing this Dockerfile
# (assuming that the file is named Dockerfile):
# docker build -t <image_name> .
#
# To Start the Apache Tomcat server run the below command:
# docker run --name <container_name> -p <portnumber>:8080 -d <image_name>

##############################################

# Disclaimer: 
# 1. This base image was built using http://containerz.blogspot.co.uk/2015/03/creating-base-images.html
#    and was configured to access suitable repositories for installing dependent software packages.

# Base Image
FROM sles12:latest

# The author
MAINTAINER  LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)

# Install dependencies
RUN zypper update -y && zypper install -y wget tar git-core java-1.7.0-openjdk.s390x java-1.7.0-openjdk-devel.s390x make gcc gcc-c++ 

# Set environment variable for JAVA
ENV JAVA_HOME /usr/lib64/jvm/java-1.7.0
ENV PATH $PATH:$JAVA_HOME/bin

# Download Apache ANT source from archive.apache.org
RUN wget http://www.eu.apache.org/dist//ant/binaries/apache-ant-1.9.6-bin.tar.gz && tar -xvzf apache-ant-1.9.6-bin.tar.gz

# Set environment variable for Apache ANT
ENV ANT_HOME /apache-ant-1.9.6
ENV PATH $PATH:$ANT_HOME/bin

# Install openssl new version
RUN git clone https://github.com/openssl/openssl.git && cd openssl && git checkout OpenSSL_1_0_2d && \
./config --prefix=/usr --openssldir=/usr/local/openssl shared && \
make && \
make install

# Download Apache Tomcat source code from github  and checkout latest version 8.0.30
RUN git clone https://github.com/apache/tomcat80.git && cd tomcat80 && git checkout TOMCAT_8_0_30

# Change working directory to Apache Tomcat
WORKDIR tomcat80

# Build Apache Tomcat
RUN cp build.properties.default build.properties && ant

# Exclude performance tests. E.g. on systems with slow/inconsistent timing
RUN echo "test.excludePerformance=true" >> build.properties

# Increase Server WAIT TIME for systems with slow/inconsistent timing
RUN sed -i 's/60000/60000000/' test/org/apache/tomcat/websocket/TesterFirehoseServer.java

# Run test cases
RUN ant test

# Set environment variable for Apache Tomcat
ENV CATALINA_HOME /tomcat80/output/build
ENV PATH $PATH:$CATALINA_HOME/bin

# Port for Apache tomcat
EXPOSE 8080

# Add manager role to Apache Tomcat
RUN sed  -i '$ i \
<role rolename="manager-gui"/> \
<user username="tomcat" password="tomcat" roles="manager-gui"/> ' $CATALINA_HOME/conf/tomcat-users.xml

# Set work directory to Apache Tomcat build output
WORKDIR $CATALINA_HOME/bin

# Start Apache Tomcat server
CMD catalina.sh start && tail -f  $CATALINA_HOME/logs/catalina.out
